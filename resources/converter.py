
# coding: utf-8

# In[1]:

import xml.etree.ElementTree as ET
from os import listdir
from os.path import isfile, join

SRC_DIR = './tmTheme'
DIST_DIR = './themeCSS'
filenames = [filename for filename in listdir(SRC_DIR) if isfile(join(SRC_DIR, filename))]


# In[2]:

STATIC_CONTENT = '''
package View;

/**
 * Created by cdzos on 2017/5/2.
 *
 * This file is generated by a Python Script
 * DO NOT modify this file manually
 */
public final class StyleFileList {

    public static String[] names = {
'''

STATIC_CONTENT2 = '''    };
}
'''


# In[3]:

def parse_array(array_node):
    result = []
    for child in array_node:
        if child.tag == 'dict':
            result.append(parse_dict(child))
    return result

def parse_dict(dict_node):
    result = {}
    key = None
    for child in dict_node:
        if child.tag == 'key':
            key = child.text
        elif child.tag == 'string':
            result[key] = child.text
        elif child.tag == 'dict':
            result[key] = parse_dict(child)
        elif child.tag == 'array':
            result[key] = parse_array(child)
    return result


# In[4]:

for filename in filenames:
    filepath = join(SRC_DIR, filename)
    try:
        tree = ET.parse(filepath)
    except:
        print('Error file:' + filename)
        continue
    root = tree.getroot() # plist

    assert(root.tag == 'plist')
    d = parse_dict(root[0])
    
    settings = d['settings']

    result = ''
   
    for value in settings:
        if 'name' not in value:
            result += 'body {\n'
            if 'foreground' in value['settings']:
                    result += '    color: ' + value['settings']['foreground'] + ';\n'
            if 'background' in value['settings']:
                result += '    background-color: ' + value['settings']['background'] + ';\n'
            result += '} \n'
            continue
        if 'scope' not in value:
            continue
        scope = value['scope'].replace('.', '-')
        ss = scope.split(',')
        for s in ss:
            s = s.strip()
            result += '.' + 'jc-' + s + ' {' + '\n'
            if 'settings' in value:
                if 'foreground' in value['settings'] and value['settings']['foreground']:
                    result += '    color: ' + value['settings']['foreground'] + ';\n'
                if 'background' in value['settings'] and value['settings']['background']:
                    result += '    background-color: ' + value['settings']['background'] + ';\n'
            result += '} \n'

    target_path = join(DIST_DIR, filename) + '.css'
    with open(target_path, 'w') as f:
        f.write(result)


# In[5]:

result = ''
result += STATIC_CONTENT
for filename in filenames:
    name = filename.split('.')[0]
    result += '        "' + name + '",\n'
result += STATIC_CONTENT2

print(result)
with open('../src/View/StyleFileList.java', 'w') as f:
    f.write(result)


# In[ ]:



